{"version":3,"sources":["scripts/main.js"],"names":["listUrl","detailsUrl","getPhones","fetch","then","response","ok","setTimeout","Promise","reject","Error","status","statusText","json","getPhonesDetails","arrayOfIds","arr","map","phoneId","resolve","result","table","document","createElement","i","arrPhonesId","el","insertAdjacentHTML","id","body","append","arrDetails","forEach","element","res","catch"],"mappings":";AAAA,aAGA,IAAMA,EAAN,0EAEMC,EAAN,sEAGA,SAASC,IACAC,OAAAA,MAAMH,GACVI,KAAK,SAAAC,GAQGA,OAPFA,EAASC,IACZC,WAAW,WACFC,OAAAA,QAAQC,OAAO,IAAIC,MAASL,GAAAA,OAAAA,EAASM,OAC1CN,iBAAAA,OAAAA,EAASO,eACV,KAGEP,EAASQ,SAItB,SAASC,EAAiBC,GAClBC,IAAAA,EAAMD,EAAWE,IAAI,SAAAC,GAClBf,OAAAA,MAASF,GAAAA,OAAAA,EAAciB,KAAAA,OAAAA,EAAvB,UACJd,KAAK,SAAAC,GACA,IAACA,EAASC,GACNI,MAAAA,MAASL,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,aAGxCP,OAAAA,EAASQ,WAIf,OAAA,IAAIL,QAAQ,SAACW,EAASV,GAC3BU,EAAQH,GACRP,EAAO,IAAIC,MAAM,2BAIrBR,IACGE,KAAK,SAAAgB,GACEC,IAAAA,EAAQC,SAASC,cAAc,SACjCC,EAAI,EACFC,EAAcL,EAAOH,IAAI,SAAAS,GAQtBA,OAPPL,EAAMM,mBAAmB,YAEiBH,iEAAAA,OAAAA,IACAE,yDAAAA,OAAAA,EAAGE,GAH7C,iCAOOF,EAAGE,KAGZN,SAASO,KAAKC,OAAOT,GAErBP,EAAiBW,GACdrB,KAAK,SAAA2B,GACJA,EAAWC,QAAQ,SAAAC,GACjBA,EAAQ7B,KAAK,SAAA8B,GAAOA,OAAAA,QAGvBC,UAEJA","file":"main.30edb747.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nconst listUrl = `https://\nmate-academy.github.io/phone-catalogue-static/api/phones.json`;\nconst detailsUrl = `https://\nmate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nfunction getPhones() {\n  return fetch(listUrl)\n    .then(response => {\n      if (!response.ok) {\n        setTimeout(() => {\n          return Promise.reject(new Error(`${response.status}:\n          ${response.statusText}`));\n        }, 5000);\n      }\n\n      return response.json();\n    });\n}\n\nfunction getPhonesDetails(arrayOfIds) {\n  const arr = arrayOfIds.map(phoneId => {\n    return fetch(`${detailsUrl}/${phoneId}.json`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(`${response.status} - ${response.statusText}`);\n        }\n\n        return response.json();\n      });\n  });\n\n  return new Promise((resolve, reject) => {\n    resolve(arr);\n    reject(new Error('Something went wrong'));\n  });\n}\n\ngetPhones()\n  .then(result => {\n    const table = document.createElement('table');\n    let i = 1;\n    const arrPhonesId = result.map(el => {\n      table.insertAdjacentHTML('beforeend', `\n        <tr>\n          <td style=\"border: 1px solid blue;\">${i++}</td>\n          <td style=\"border: 1px solid blue;\">${el.id}</td>\n        </tr>\n      `);\n\n      return el.id;\n    });\n\n    document.body.append(table);\n\n    getPhonesDetails(arrPhonesId)\n      .then(arrDetails => {\n        arrDetails.forEach(element => {\n          element.then(res => res);\n        });\n      })\n      .catch();\n  })\n  .catch();\n"]}